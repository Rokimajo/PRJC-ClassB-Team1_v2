@using CaveroApp.Areas.Identity.Data
@inject SignInManager<CaveroAppUser> SignInManager

<!DOCTYPE html>
<html>
<head>
    <title>@ViewData["Title"]</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
    <link rel="stylesheet" href="css/globals.css" />
    <link rel="stylesheet" href="css/styleguide.css" />
    <link rel="stylesheet" href="css/layout.css" />
    @if (User.IsInRole("Admin"))
    {
        <style>
        .header {background-color: #423A8E !important;}
        .aside {background-color: #423A8E !important;}
    </style>
    }
</head>    
<body>
<div class="grid-container">
    <header class="header" id="header">
        <div class="hamburger-menu">
            <strong>&#9776</strong>
        </div>
        @await RenderSectionAsync("HeaderContent", required: false)
    </header>
    <aside class="aside">
        <img src="/img/caverologowhite.png" class="aside-logo" alt="Cavero Logo"/>
        <div class="aside-close-icon">
            <strong>&times;</strong>
        </div>
        <ul class="aside_list">
            <a class="button-link" asp-area="" asp-page="/Dashboard">
                <li class="aside_list_item">
                    <img class="list-image" src="img/image-1.png"/>
                    <p>Dashboard</p>
                </li>
            </a>
            <a class="button-link" asp-area="" asp-page="/Agenda">
                <li class="aside_list_item">
                    <img class="list-image" src="img/image-2.png"/>
                    <p>Agenda</p>
                </li>
            </a>
            <a class="button-link" asp-area="" asp-page="/Events">
                <li class="aside_list_item">
                    <img class="list-image" src="img/image-8-3.png"/>
                    <p>Events</p>
                </li>
            </a>
            <a class="button-link" asp-area="" asp-page="/testpage">
                <li class="aside_list_item log-out-logo">
                    <img class="list-image" src="img/image-4.png"/>
                    <p>Settings</p>
                </li>
            </a>
            @if (SignInManager.IsSignedIn(User))
            {
                <form class="button-link" id="LogoutForm" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Page("/", new { area = "" })" method="post">
                    @*create anti forgery token for logout for CSRF attacks when the form is submitted*@
                    @Html.AntiForgeryToken()
                    <li class="aside_list_item" id="LogoutButton">
                        <img class="list-image" src="img/logouticon.png"/>
                        <p>Logout</p>
                    </li>
                </form>
            }
        </ul>
    </aside>
    <main class="main">
        @RenderBody()
    </main>
</div>



<script src="~/lib/jquery/dist/jquery.min.js"></script>
<script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
<script src="~/js/site.js" asp-append-version="true"></script>
@*script to open and close the sidebar menu on phone layouts.*@
<script>
const hamburger_menu = document.querySelector(".hamburger-menu");
const close_icon = document.querySelector(".aside-close-icon");
const aside = document.querySelector(".aside");

function toggle(elm, className) {
    if (elm.classList.contains(className)) {
        elm.classList.remove(className);
        }
    else {
        elm.classList.add(className);
        }
    }
    
    hamburger_menu.addEventListener("click", function(){toggle(aside, "active")});
    close_icon.addEventListener("click", function (){toggle(aside, "active")});
</script>
 
@*Script to make a <li> element be able to submit a logout like a <button> element can.*@
<script>
function submit(){
    const LogoutForm = document.querySelector("#LogoutForm");
    LogoutForm.submit();
 }
const logoutButton = document.querySelector("#LogoutButton");
logoutButton.addEventListener("click", function (){submit()});
</script>

@await RenderSectionAsync("Scripts", required: false)
</body>
</html>