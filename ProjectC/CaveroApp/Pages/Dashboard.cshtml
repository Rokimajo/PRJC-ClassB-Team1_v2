@page
@using CaveroApp.Areas.Identity.Data
@using System.Security.Claims
@using Microsoft.AspNetCore.Mvc.TagHelpers
@model CaveroApp.Pages.Dashboard
@inject SignInManager<CaveroAppUser> SignInManager
@inject CaveroAppContext Context
@inject Services.EventServices eventService

@{
    ViewData["Title"] = "Dashboard";
    Layout = "Shared/CaveroLayoutResponsive";
    <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
    <link rel="preload" as="style" href="css/dashboard.css">
    <link rel="preload" as="style" href="css/events.css">
    <link rel="stylesheet" href="css/dashboard.css"/>
    <link rel="stylesheet" href="css/layout.css"/>
    <link rel="stylesheet" href="css/events.css"/>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css">
    <script type="module" src="https://cdn.jsdelivr.net/npm/flatpickr"></script>
    var today = DateTime.Now.Date;
    var validEvents = Model.GetAllEvents().OrderBy(e => e.date);
    var groupedEvents = validEvents.GroupBy(e => e.date.Date).OrderBy(g => g.Key);
}

@section HeaderContent
{
    @if (SignInManager.IsSignedIn(User))
    {
        var userID = User.FindFirst(ClaimTypes.NameIdentifier)?.Value;
        var username = Context.Users.Where(x => x.Id == userID).Select(y => y.FirstName).First();
        <h1 style="color: white; font-size: 28px; font-weight:  600; font-family: 'Montserrat', sans-serif;">Welkom terug, @username!</h1>
    }
}

<!DOCTYPE html>
<html>
<head>
</head>
<body>
<div class="main-body">
    <div class="card one">
        <div class="present-box">
            <p>Aanwezige caverianen vandaag</p>
            <div class="box-info">
                <img src="img/image-8-2.png" alt="Person Icon"/>
                <h1>@Model.EmployeeCount</h1>
            </div>
        </div>
        <div class="present-box">
            <p>Aantal events deze week</p>
            <div class="box-info">
                <img src="img/image-8-3.png" alt="Event Icon"/>
                <h1>@Model.EventCount</h1>
            </div>
        </div>
    </div>
    <div class="card two">
        <!-- Reusing event modal because it fits very well with a check in form.-->
        <div class="event-modal-content" style="max-width: 400px; margin: 10px; animation-name: ''; -webkit-animation-name: '';">
            <div class="event-modal-header">
                <h1 style="justify-content: flex-start">Inchecken</h1>
            </div>
            <div class="event-modal-header">
                <p style="justify-content: flex-start; color: var(--collection-1-cavero-blackish-grey); opacity: 80%; font-weight:  500;">Kies hier met de datepicker een datum om in te checken.</p>
            </div>
            <div class="line"></div>
            <!-- -->
            <form id="checkInForm" asp-page-handler="DateCheckInUser" method="post">
                <div class="event-modal-create">
                    <div class="event-modal-row">
                        <input id="dateCheckIn" placeholder="Kies een datum.." type="text" required
                               oninput="validateCheckInDate()" onblur="validateCheckInDate()" asp-for="CheckModel.Date"/>
                        <span class="error-message" id="dateCheckInError"></span>
                    </div>
                    <div class="event-modal-row">
                        <button id="dateCheckInButton" class="button create-event" type="submit">
                            <p>CHECK IN OP DATUM</p>
                        </button>
                    </div>
                </div>
            </form>
        </div>
    </div>
    <div class="card three">
        @*Gemaakt door Aryan*@
        <div class="dashboard-upcoming-events">
            <h1>Aanstaande evenementen</h1>
            <div class="line"></div>
            @{ var upcomingEvents = groupedEvents.Where(x => x.Key >= DateTime.UtcNow); }
            @if (!upcomingEvents.Any())
            {
                <p>Er zijn nog geen evenementen deze week.</p>
            }
            else
            {
                @foreach (var group in upcomingEvents)
                {
                    <p>@group.Key.ToString("dddd, d MMMM")</p>
                    @foreach (var ev in group.OrderBy(x => x.start_time))
                    {
                        <div class="event-card" style="max-width: 100%; margin: 0 0 7px;">
                            <h1>@ev.title</h1>
                            <p>Locatie: @ev.location</p>
                            <p>Tijd: @ev.start_time.ToString(@"hh\:mm") - @ev.end_time.ToString(@"hh\:mm")</p>
                            <div class="event-card-footer" style="flex-direction: row; align-items: center; margin-top: 10px;">
                                <div class="event-card-attendance" style="margin-right: 15px;">
                                    <img src="img/user-check-icon.png" style="height: 25px; width: 25px;"/>
                                    <p style="font-size: 22px;">@Model.GetEventParticipantsCount(@ev)</p>
                                </div>
                                <button class="button edit-event" data-card-id="@ev.ID">
                                    <p>INFO</p>
                                </button>
                            </div>
                        </div>

                        <!-- Modal Content -->
                        <!-- Has to be loaded here so it gets filled up with the unique information for each card. -->
                        <div class="event-modal modal-card-@ev.ID">
                            <div class="event-modal-content">
                                <div class="event-modal-header">
                                    <h1 style="justify-content: flex-start">@ev.title</h1>
                                    <span class="close close-@ev.ID" style="justify-content: flex-start">&times;</span>
                                </div>
                                <div class="line"></div>
                                <div class="event-modal-row">
                                    <h1>Beschrijving</h1>
                                    <p>@ev.description</p>
                                </div>
                                <div>
                                    <div class="event-modal-row">
                                        <h1>Overige Informatie</h1>
                                        <p>
                                            <strong>Locatie</strong>: @ev.location<br/>
                                            <strong>Datum</strong>: @ev.date.Date.ToString("dd/MM/yyyy")<br/>
                                            <strong>Tijd</strong>: @ev.start_time.ToString(@"hh\:mm") - @ev.end_time.ToString(@"hh\:mm")<br/>
                                        </p>
                                    </div>
                                    <div class="event-modal-row">
                                        @{ var eventParticipants = @eventService.GetEventParticipants(Context, ev); }
                                        <h1>Deelnemers (@eventParticipants.Count())</h1>
                                        @if (@eventParticipants.Count() != 0)
                                        {
                                            <ul class="event-modal-attendance">
                                                @foreach (var us in @eventParticipants)
                                                {
                                                    @if (!System.IO.File.Exists(@$"wwwroot/img/profilepictures/avatar{@us.Id}.png"))
                                                    {
                                                        var user = Context.Users.First(x => x.Id == @us.Id);
                                                        ProfilePictureGenerator.MakePF(user.FirstName, user.LastName, @us.Id!);
                                                    }
                                                    <li>
                                                        <img src="img/profilepictures/avatar@(us.Id).png"/>
                                                        <p>@us.FirstName @us.LastName</p>
                                                    </li>
                                                }
                                            </ul>
                                        }
                                    </div>
                                    <div class="event-modal-row">
                                        @{ var Reviews = eventService.GetEventReviews(Context, ev); }
                                        @if (Reviews.Count() != 0)
                                        {
                                            <h1>Gem. Reviewscore: (@Reviews.Select(x => x.Review.rating).Average().ToString("#.##")/5) </h1>
                                        }
                                    </div>
                                    <div class="event-modal-row">
                                        @{ var reviews = eventService.GetEventReviews(Context, ev); }
                                        <h1>Reviews (@reviews.Count())</h1>
                                        @if (reviews.Count() != 0)
                                        {
                                            <div class="event-reviews">
                                                @foreach (var us in reviews)
                                                {
                                                    @if (!System.IO.File.Exists(@$"wwwroot/img/profilepictures/avatar{@us.User.Id}.png"))
                                                    {
                                                        var user = Context.Users.First(x => x.Id == @us.User.Id);
                                                        ProfilePictureGenerator.MakePF(user.FirstName, user.LastName, @us.User.Id!);
                                                    }

                                                    <div class="event-review-content">
                                                        <div class="event-review-header">
                                                            <img src="img/profilepictures/avatar@(@us.User.Id).png"/>
                                                            <h1>@us.User.FirstName @us.User.LastName</h1>
                                                            @{ var reviewRating = us.Review.rating; }
                                                            @for (int i = 0; i < 5; i++)
                                                            {
                                                                if (reviewRating > 0)
                                                                {
                                                                    <span class="fa fa-star checked"></span>
                                                                    reviewRating--;
                                                                }
                                                                else
                                                                {
                                                                    <span class="fa fa-star unchecked"></span>
                                                                }
                                                            }

                                                        </div>

                                                        <div class="line"></div>
                                                        <div class="event-review-row">
                                                            <p style="font-weight: 500;">@us.Review.feedback</p>
                                                        </div>
                                                    </div>
                                                }
                                            </div>
                                        }
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                }
            }
        </div>
    </div>
</div>
</body>


<script>
document.addEventListener('DOMContentLoaded', function () {
flatpickr("#dateCheckIn", {
       enableTime: false,
       dateFormat: "d-m-Y",
       minDate: "today",
       disable: [
           function (date) {
               // Disable weekends (Saturday and Sunday)
               return (date.getDay() === 0 || date.getDay() === 6);
           }
       ],
   });
const dateCheckButton = document.getElementById('dateCheckInButton');
const form = document.getElementById('checkInForm');

      dateCheckButton.addEventListener('click', function (event) {
              const dateCheckError = document.getElementById('dateCheckInError');
              validateCheckInDate(event);
              if (!form.checkValidity()  || dateCheckError.textContent !== '') {
                  // Prevent form submission if there are validation errors
                  event.preventDefault();
              }
          });
});



function validateCheckInDate(event) {
    const dateCheckInput = document.getElementById('dateCheckIn');
    const dateCheckError = document.getElementById('dateCheckInError');
    if (dateCheckInput.value === ''){
         if (event !== undefined)
            event.preventDefault();
        dateCheckError.textContent = 'U moet eerst een datum invullen.';
        dateCheckError.style.display = 'inline';
    }
    else {
         $.ajax({
                    url: '/Dashboard?handler=CheckDate',
                    data: { 'date': dateCheckInput.value },
                    success: function(isValid) {
                        if (isValid) {
                            dateCheckError.textContent = '';
                            dateCheckError.style.display = 'none';
                        } else {
                            dateCheckError.textContent = 'U bent al ingecheckt op deze dag.';
                            dateCheckError.style.display = 'inline';
                            // The date is not valid, show an error message.
                        }
                    }
                });
    }
}

var infoButtons = document.querySelectorAll(".button.edit-event");

infoButtons.forEach(function (button) {
    button.addEventListener("click", function () {
        // Find the corresponding modal based on data attribute or class.
        var cardId = button.getAttribute("data-card-id");
        var modal = document.querySelector(".modal-card-" + cardId);
        var span = document.getElementsByClassName("close-" + cardId)[0];
        // When the user clicks on <span> (x), close the modal
        span.onclick = function() {
            modal.style.display = "none";
        }

        // When the user clicks anywhere outside of the modal, close it
        window.onclick = function(event) {
            if (event.target == modal) {
                modal.style.display = "none";
            }
        }

        // Open the modal.
        modal.style.display = "flex";
    });
});
</script>
</html>